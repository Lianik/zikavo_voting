<?php

/**
 * @file
 *  Current module allows to send notices for single/multiple users.
 */


/**
 * Implementation of hook_permission().
 */
function zikavo_voting_permission() {
  return array(
    'zikavo node voting' => array(
      'title' => t('Voting'),
      'description' => t('Permission to vote'),
    ),
    'zikavo view voting results' => array(
      'title' => t('View voting results'),
      'description' => t('Permission to view all voting results'),
    ),
  );
}


/**
 * Implementation of hook_menu().
 */

function zikavo_voting_menu() {
  $items = array();

  $items['admin/people/voting'] = array(
    'page callback' => 'zikavo_voting_results',
    'title' => 'Voting',
    'access arguments' => array('zikavo view voting results'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4,
  );
  $items['system/voting/%/%'] = array(
    'title' => 'Zikavo Voting',
    'type' => MENU_CALLBACK,
    'page callback' => 'zikavo_voting_processor',
    'page arguments' => array(2, 3),
    'access arguments' => array('zikavo node voting'),
  );

  return $items;
}


/**
 * Implementation of hook_node_view()
 */

function zikavo_voting_node_view($node, $view_mode, $langcode) {
  $votes_number = zikavo_voting_get_votes($node->nid);
  if (zikavo_user_voted($node->nid) !== FALSE) {
    $voting_class = 'zik_voted';
  }
  else {
    $voting_class = 'zik_not_voted';
  }
  $voting_field = '<div class="zikavo_voting"><div class="zikavo-vote-' . $node->nid .' zikavo-vote-results">' . $votes_number . '</div><a href="#" data-nid="' . $node->nid . '" class="zikavo-vote ' . $voting_class . '">&nbsp</a></div>';
  $node->content['zikavo_voting_field'] = array(
    '#markup' => $voting_field,
    '#weight' => 10,
    '#theme' => 'mymodule_my_additional_field',
  );
}

/**
 * Callback for page creating
 */

function zikavo_voting_results() {
  $query = db_select('zikavo_voted', 'zv')
    ->fields('zv', array('nid', 'uid', 'date'))
    ->orderBy('nid')
    ->execute();
  $result = $query->fetchAll();

  return 'trololo';
}


function zikavo_voting_processor($nid, $vid) {
  global $user;
  if (is_numeric($nid)) {
    $result_nid = zikavo_user_voted($nid, $user->uid);

    $voting_value = 1;
  }
  else {
    return FALSE;
  }

  if ($result_nid !== $nid && $vid !== 0) {
    $answer = array();
    $query = db_insert('zikavo_voted')
      ->fields(array(
          'nid' => $nid,
          'uid' => $user->uid,
          'value' => $voting_value,
          'date' => REQUEST_TIME,
        ))
      ->execute();
    $answer['vid'] = $query;

    $query_sum = db_select('zikavo_voting_summary', 'zvs')
      ->fields('zvs', array('sum_value'))
      ->condition('nid', $nid)
      ->execute();
    $sum_value = $query_sum->fetchField();

    if ($sum_value !== FALSE) {
      $sum_value_upd = $sum_value + $voting_value;
      $query_sum_upd = db_update('zikavo_voting_summary')
        ->fields(array('sum_value' => $sum_value_upd,))
        ->condition('nid', $nid)
        ->execute();
      $answer['value'] = $sum_value_upd;
    } else {
      $sum_value_ins = $voting_value;

      $query_sum_ins = db_insert('zikavo_voting_summary')
        ->fields(array(
          'sum_value' => $sum_value_ins,
          'nid' => $nid,
          ))
        ->execute();
      $answer['value'] = $sum_value_ins;
    }

  }
  else {
    $query = db_delete('zikavo_voted')
      ->condition('nid', $nid)
      ->condition('uid', $user->uid)
      ->execute();

    $query_sum = db_select('zikavo_voting_summary', 'zvs')
      ->fields('zvs', array('sum_value'))
      ->condition('nid', $nid)
      ->execute();
    $sum_value = $query_sum->fetchField();
    $sum_value_dupd = $sum_value - $voting_value;
    $query_sum_upd = db_update('zikavo_voting_summary')
      ->fields(array('sum_value' => $sum_value_dupd,))
      ->condition('nid', $nid)
      ->execute();
     $answer['value'] = $sum_value_dupd;
  }
  print drupal_json_output($answer);
}

function zikavo_voting_get_votes($nid) {
  $query = db_select('zikavo_voting_summary', 'zvs')
   ->fields('zvs', array('sum_value'))
   ->condition('nid', $nid)
   ->execute();
  $result = $query->fetchField();
  if (!isset($result) || empty($result)) {
    $result = '0';
  }
  return $result;
}

function zikavo_user_voted($nid, $uid = NULL) {
  if (!isset($uid)) {
    global $user;
    $uid = $user->uid;
  }
  $query = db_select('zikavo_voted', 'zv')
      ->fields('zv', array('nid', 'vid'))
      ->condition('nid', $nid)
      ->condition('uid', $uid)
      ->execute();
  $result_nid = $query->fetchField();
  if ($result_nid !== FALSE) {
    return $result_nid;
  }
  else {
    return FALSE;
  }
}

function zikavo_voting_init() {
  drupal_add_library('system', 'jquery.cookie');
}